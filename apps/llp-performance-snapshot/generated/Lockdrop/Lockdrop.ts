// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BaseRewardUpdated extends ethereum.Event {
  get params(): BaseRewardUpdated__Params {
    return new BaseRewardUpdated__Params(this);
  }
}

export class BaseRewardUpdated__Params {
  _event: BaseRewardUpdated;

  constructor(event: BaseRewardUpdated) {
    this._event = event;
  }

  get baseRewards(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BonusRewardUpdated extends ethereum.Event {
  get params(): BonusRewardUpdated__Params {
    return new BonusRewardUpdated__Params(this);
  }
}

export class BonusRewardUpdated__Params {
  _event: BonusRewardUpdated;

  constructor(event: BonusRewardUpdated) {
    this._event = event;
  }

  get bonusRewards(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ClaimRewards extends ethereum.Event {
  get params(): ClaimRewards__Params {
    return new ClaimRewards__Params(this);
  }
}

export class ClaimRewards__Params {
  _event: ClaimRewards;

  constructor(event: ClaimRewards) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rewards(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get lockAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ETHDeposited extends ethereum.Event {
  get params(): ETHDeposited__Params {
    return new ETHDeposited__Params(this);
  }
}

export class ETHDeposited__Params {
  _event: ETHDeposited;

  constructor(event: ETHDeposited) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get lockAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EmergencySet extends ethereum.Event {
  get params(): EmergencySet__Params {
    return new EmergencySet__Params(this);
  }
}

export class EmergencySet__Params {
  _event: EmergencySet;

  constructor(event: EmergencySet) {
    this._event = event;
  }

  get enableEmergency(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class EmergencyWithdrawn extends ethereum.Event {
  get params(): EmergencyWithdrawn__Params {
    return new EmergencyWithdrawn__Params(this);
  }
}

export class EmergencyWithdrawn__Params {
  _event: EmergencyWithdrawn;

  constructor(event: EmergencyWithdrawn) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FundRecovered extends ethereum.Event {
  get params(): FundRecovered__Params {
    return new FundRecovered__Params(this);
  }
}

export class FundRecovered__Params {
  _event: FundRecovered;

  constructor(event: FundRecovered) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LevelMasterSet extends ethereum.Event {
  get params(): LevelMasterSet__Params {
    return new LevelMasterSet__Params(this);
  }
}

export class LevelMasterSet__Params {
  _event: LevelMasterSet;

  constructor(event: LevelMasterSet) {
    this._event = event;
  }

  get levelMaster(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get poolId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RewardTokenSet extends ethereum.Event {
  get params(): RewardTokenSet__Params {
    return new RewardTokenSet__Params(this);
  }
}

export class RewardTokenSet__Params {
  _event: RewardTokenSet;

  constructor(event: RewardTokenSet) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdrawn extends ethereum.Event {
  get params(): Withdrawn__Params {
    return new Withdrawn__Params(this);
  }
}

export class Withdrawn__Params {
  _event: Withdrawn;

  constructor(event: Withdrawn) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Lockdrop__infoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  get_depositTime(): BigInt {
    return this.value0;
  }

  get_startRewardTime(): BigInt {
    return this.value1;
  }

  get_unlockTime(): BigInt {
    return this.value2;
  }

  get_baseRewards(): BigInt {
    return this.value3;
  }

  get_bonusRewards(): BigInt {
    return this.value4;
  }

  get_totalAmount(): BigInt {
    return this.value5;
  }

  get_totalBoostedAmount(): BigInt {
    return this.value6;
  }
}

export class Lockdrop__userInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getAmount(): BigInt {
    return this.value0;
  }

  getBoostedAmount(): BigInt {
    return this.value1;
  }

  getRewardDebt(): BigInt {
    return this.value2;
  }
}

export class Lockdrop extends ethereum.SmartContract {
  static bind(address: Address): Lockdrop {
    return new Lockdrop("Lockdrop", address);
  }

  claimableRewards(_user: Address): BigInt {
    let result = super.call(
      "claimableRewards",
      "claimableRewards(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBigInt();
  }

  try_claimableRewards(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimableRewards",
      "claimableRewards(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositTime(): BigInt {
    let result = super.call("depositTime", "depositTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_depositTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("depositTime", "depositTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  enableEmergency(): boolean {
    let result = super.call("enableEmergency", "enableEmergency():(bool)", []);

    return result[0].toBoolean();
  }

  try_enableEmergency(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "enableEmergency",
      "enableEmergency():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  info(): Lockdrop__infoResult {
    let result = super.call(
      "info",
      "info():(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new Lockdrop__infoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_info(): ethereum.CallResult<Lockdrop__infoResult> {
    let result = super.tryCall(
      "info",
      "info():(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Lockdrop__infoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  levelMaster(): Address {
    let result = super.call("levelMaster", "levelMaster():(address)", []);

    return result[0].toAddress();
  }

  try_levelMaster(): ethereum.CallResult<Address> {
    let result = super.tryCall("levelMaster", "levelMaster():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  levelMasterPoolId(): BigInt {
    let result = super.call(
      "levelMasterPoolId",
      "levelMasterPoolId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_levelMasterPoolId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "levelMasterPoolId",
      "levelMasterPoolId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lp(): Address {
    let result = super.call("lp", "lp():(address)", []);

    return result[0].toAddress();
  }

  try_lp(): ethereum.CallResult<Address> {
    let result = super.tryCall("lp", "lp():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pool(): Address {
    let result = super.call("pool", "pool():(address)", []);

    return result[0].toAddress();
  }

  try_pool(): ethereum.CallResult<Address> {
    let result = super.tryCall("pool", "pool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rewardToken(): Address {
    let result = super.call("rewardToken", "rewardToken():(address)", []);

    return result[0].toAddress();
  }

  try_rewardToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("rewardToken", "rewardToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  startRewardTime(): BigInt {
    let result = super.call(
      "startRewardTime",
      "startRewardTime():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_startRewardTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startRewardTime",
      "startRewardTime():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalAmount(): BigInt {
    let result = super.call("totalAmount", "totalAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalAmount", "totalAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalBoostedAmount(): BigInt {
    let result = super.call(
      "totalBoostedAmount",
      "totalBoostedAmount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalBoostedAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalBoostedAmount",
      "totalBoostedAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unlockTime(): BigInt {
    let result = super.call("unlockTime", "unlockTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_unlockTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("unlockTime", "unlockTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userInfo(param0: Address): Lockdrop__userInfoResult {
    let result = super.call(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Lockdrop__userInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_userInfo(param0: Address): ethereum.CallResult<Lockdrop__userInfoResult> {
    let result = super.tryCall(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Lockdrop__userInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  weth(): Address {
    let result = super.call("weth", "weth():(address)", []);

    return result[0].toAddress();
  }

  try_weth(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth", "weth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _weth(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lp(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pool(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _depositTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _startRewardTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _unlockTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _baseRewards(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _bonusRewards(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minLpAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositETHCall extends ethereum.Call {
  get inputs(): DepositETHCall__Inputs {
    return new DepositETHCall__Inputs(this);
  }

  get outputs(): DepositETHCall__Outputs {
    return new DepositETHCall__Outputs(this);
  }
}

export class DepositETHCall__Inputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }

  get _minLpAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DepositETHCall__Outputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class RecoverFundCall extends ethereum.Call {
  get inputs(): RecoverFundCall__Inputs {
    return new RecoverFundCall__Inputs(this);
  }

  get outputs(): RecoverFundCall__Outputs {
    return new RecoverFundCall__Outputs(this);
  }
}

export class RecoverFundCall__Inputs {
  _call: RecoverFundCall;

  constructor(call: RecoverFundCall) {
    this._call = call;
  }

  get _receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecoverFundCall__Outputs {
  _call: RecoverFundCall;

  constructor(call: RecoverFundCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBaseRewardsCall extends ethereum.Call {
  get inputs(): SetBaseRewardsCall__Inputs {
    return new SetBaseRewardsCall__Inputs(this);
  }

  get outputs(): SetBaseRewardsCall__Outputs {
    return new SetBaseRewardsCall__Outputs(this);
  }
}

export class SetBaseRewardsCall__Inputs {
  _call: SetBaseRewardsCall;

  constructor(call: SetBaseRewardsCall) {
    this._call = call;
  }

  get _baseReward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBaseRewardsCall__Outputs {
  _call: SetBaseRewardsCall;

  constructor(call: SetBaseRewardsCall) {
    this._call = call;
  }
}

export class SetBonusRewardsCall extends ethereum.Call {
  get inputs(): SetBonusRewardsCall__Inputs {
    return new SetBonusRewardsCall__Inputs(this);
  }

  get outputs(): SetBonusRewardsCall__Outputs {
    return new SetBonusRewardsCall__Outputs(this);
  }
}

export class SetBonusRewardsCall__Inputs {
  _call: SetBonusRewardsCall;

  constructor(call: SetBonusRewardsCall) {
    this._call = call;
  }

  get _bonusReward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBonusRewardsCall__Outputs {
  _call: SetBonusRewardsCall;

  constructor(call: SetBonusRewardsCall) {
    this._call = call;
  }
}

export class SetEmergencyCall extends ethereum.Call {
  get inputs(): SetEmergencyCall__Inputs {
    return new SetEmergencyCall__Inputs(this);
  }

  get outputs(): SetEmergencyCall__Outputs {
    return new SetEmergencyCall__Outputs(this);
  }
}

export class SetEmergencyCall__Inputs {
  _call: SetEmergencyCall;

  constructor(call: SetEmergencyCall) {
    this._call = call;
  }

  get _enableEmergency(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetEmergencyCall__Outputs {
  _call: SetEmergencyCall;

  constructor(call: SetEmergencyCall) {
    this._call = call;
  }
}

export class SetLevelMasterCall extends ethereum.Call {
  get inputs(): SetLevelMasterCall__Inputs {
    return new SetLevelMasterCall__Inputs(this);
  }

  get outputs(): SetLevelMasterCall__Outputs {
    return new SetLevelMasterCall__Outputs(this);
  }
}

export class SetLevelMasterCall__Inputs {
  _call: SetLevelMasterCall;

  constructor(call: SetLevelMasterCall) {
    this._call = call;
  }

  get _levelMaster(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _poolId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetLevelMasterCall__Outputs {
  _call: SetLevelMasterCall;

  constructor(call: SetLevelMasterCall) {
    this._call = call;
  }
}

export class SetRewardTokenCall extends ethereum.Call {
  get inputs(): SetRewardTokenCall__Inputs {
    return new SetRewardTokenCall__Inputs(this);
  }

  get outputs(): SetRewardTokenCall__Outputs {
    return new SetRewardTokenCall__Outputs(this);
  }
}

export class SetRewardTokenCall__Inputs {
  _call: SetRewardTokenCall;

  constructor(call: SetRewardTokenCall) {
    this._call = call;
  }

  get _rewardToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRewardTokenCall__Outputs {
  _call: SetRewardTokenCall;

  constructor(call: SetRewardTokenCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _unstake(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
